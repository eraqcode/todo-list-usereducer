{"version":3,"sources":["helpers/todoReducer.js","components/Todo/TodoList.jsx","components/Form/Form.jsx","hooks/useForm.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["todoListReducer","todos","action","type","newToDo","payload","task","description","map","todo","id","complete","filter","Date","now","TodoList","dispatch","style","color","background","className","onClick","Form","useReducer","JSON","parse","localStorage","getItem","initialState","useState","values","setValues","reset","handleInputChange","e","target","name","value","useForm","useEffect","setItem","stringify","length","margin","onSubmit","preventDefault","onChange","placeholder","cols","rows","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2df2859.chunk.js","sourcesContent":["\r\nexport const todoListReducer = (todos, action) => {\r\n    switch (action.type) {\r\n        case \"add\":\r\n            return [ ...todos, newToDo(action.payload.task, action.payload.description) ]\r\n        case \"complete\":\r\n            return todos.map( todo => {\r\n                if (todo.id === action.payload.id) {\r\n                    return { ...todo, complete: !todo.complete }\r\n                }\r\n                return todo\r\n            } )\r\n        case \"remove\":\r\n            return todos.filter( todo => todo.id !== action.payload.id )    \r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst newToDo = (task, description) => {\r\n    return {\r\n        id: Date.now(),\r\n        task,\r\n        description,\r\n        complete: false\r\n    }\r\n}","import React from 'react'\r\nimport './todo.css'\r\nexport const TodoList = ({todo, dispatch}) => {\r\n    return (\r\n        <div \r\n            style={{ color: todo.complete ? \"#b1aeae\" : \"black\", background: todo.complete ? \"gray\" : \"#ccdbf1f2\" }}\r\n            className=\"todolist\">\r\n            <div className=\"todolist__text\">\r\n                <header>\r\n                    <h4> { todo?.task } </h4>\r\n                </header>\r\n                <p>\r\n                   { todo?.description }\r\n                </p>\r\n\r\n                {\r\n                    todo.complete ? ( <h3 style = {{ color: \"lightgreen\" }}> Completado </h3> ) : null\r\n                }\r\n            </div>\r\n            <div className=\"todolist__buttons\">\r\n                <buttons \r\n                    style={{ background: todo.complete ? \"#29b606\" : \"#f10f0f\"}}\r\n                    className=\"btn\"\r\n                    type=\"button\"\r\n                    onClick={ () => dispatch({ type: \"complete\", payload: {id:todo.id} })   }\r\n                >\r\n                    Completo\r\n                </buttons>\r\n                <buttons\r\n                    className=\"btn\"\r\n                    type=\"button\"\r\n                    onClick={ () => dispatch({ type: \"remove\", payload: {id:todo.id} })   }\r\n                >\r\n                    Eliminar\r\n                </buttons>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { todoListReducer } from '../../helpers/todoReducer';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { TodoList } from '../Todo/TodoList';\r\nimport './form.css'\r\nexport const Form = () => {\r\n\r\n    const init = () => {\r\n        return JSON.parse( localStorage.getItem(\"todos\") ) || [];\r\n    } \r\n    \r\n    const [todos, dispatch] = useReducer(todoListReducer, [], init)\r\n    const [values, handleInputChange, reset] = useForm({\r\n        task: '',\r\n        description: ''\r\n    })\r\n    const { task, description } = values;\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"add\", payload: { task:task, description:description } });\r\n        reset();\r\n    }\r\n\r\n   \r\n\r\n    //Guardando datos en localstorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <section className=\"todo\">\r\n                <div className=\"todo__content\">\r\n                    <h4 style = {{ color: \"wheat\" }}> ToDo list ({ todos.length }) </h4>\r\n                    {\r\n                        todos.length < 1 ? ( <h4 style= {{color: \"white\", margin: \"30px\"}}> Tu lista aqui </h4> ) \r\n                        : \r\n                        (   \r\n                            todos.map( todo => (\r\n                                <TodoList \r\n                                    todo={ todo }\r\n                                    dispatch={ dispatch }\r\n                                />\r\n                            ) )\r\n                        )\r\n                    }\r\n                </div>\r\n            </section>\r\n            <section className=\"form\">\r\n                <header>\r\n                    <h3>Ingresa Tu Tarea</h3>\r\n                </header>\r\n                <form onSubmit={ handleFormSubmit }>\r\n                    <div className=\"form__content\">\r\n                        <div className=\"form__fields\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"task\"\r\n                                value={ task }\r\n                                onChange={ handleInputChange }\r\n                                placeholder=\"Tu tarea\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form__fields\">\r\n                            <textarea\r\n                                name=\"description\"\r\n                                cols=\"26\"\r\n                                rows=\"3\"\r\n                                value={ description }\r\n                                onChange={ handleInputChange }\r\n                                placeholder=\"Descriptcion\"\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                    <button type=\"submit\">\r\n                        Guardar\r\n                    </button>\r\n                </form>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n    \r\n    const reset = () => {\r\n        setValues( initialState )\r\n    }\r\n    const handleInputChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react'\r\nimport './header.css'\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"header__app\">\r\n            <h1> My Todo List </h1>\r\n        </header>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\nimport { Form } from './components/Form/Form';\nimport { Header } from './components/Header/Header';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n        <Form />\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}